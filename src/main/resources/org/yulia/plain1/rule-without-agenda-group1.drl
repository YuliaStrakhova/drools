package org.yulia.plain1

import  java.lang.Double
import  java.lang.Object
import  java.util.Optional
import org.yulia.model.Result;
import org.yulia.model.OrderItem;

global OrderItem $orderItem



rule "Rule Filter"

when
    checkOrderItem(  )
then
    insert(new Result(true, "rule-with-agenda-group1.drl"));
end

query "checkOrderItem"
    (
        calculateValue( $calculatedValue, $orderItem; )  and
        Optional( $calculatedValue.orElse(null) >  10.0 ) from Optional.empty()
    )
end

query "calculateValue" ( Optional $calculatedValue, OrderItem $oi )
    (
        OrderItem( $optionalPrice := Optional.of(price) ) from $oi and
        (
             (
                Optional( !this.isEmpty(), $optionalPriceVal : this.get() ) from $optionalPrice and
                Double( $modifiedPrice : (this *3) ) from $optionalPriceVal and
                Optional( $calculatedValue := this ) from Optional.ofNullable($modifiedPrice)
              )
             or
             (
                Optional( this.isEmpty() ) from $optionalPrice and
                Optional( $calculatedValue := this ) from $optionalPrice
             )

        )
    )
end



